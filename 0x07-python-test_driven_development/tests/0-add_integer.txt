The 0-add_integer module
======================

Using add_integer
-------------------

Import add_integer from the 0-add_integer module:
    >>> add_integer = __import__('0-add_integer').add_integer

Adds two integers:
    >>> add_integer(2,3)
    5

 Adds two floats both as integers:
    >>> add_integer(2.9,3.25)
    5

Adds an integer and a float both as integers:
    >>> add_integer(2, 3.25)
    5

Adds an integer and default integer of b(98):
    >>> add_integer(2)
    100

Raises an OverflowError exception with the default message
'cannot convert float infinity to integer' if 'a' is added
to float infinity:
    >>> add_integer(2, float('inf'))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer

Raises a TypeError exception with the message 'a must be an
integer' if 'a' is is not an integer:
    >>> add_integer("2", 3)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

Raises a TypeError exception with the message 'b must be an
integer' if 'b' is is not an integer:
    >>> add_integer(2, "3")
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

Raises a TypeError exception with the default message 'add_integer()
missing 1 required positional argument: 'a'':
    >>> add_integer()
    Traceback (most recent call last):
    ...
    TypeError: add_integer() missing 1 required positional argument: 'a'

Raises a TypeError exception with the default message 'add_integer()
takes from 1 to 2 positional arguments but 3 were given' if 3 arguments
are given:
    >>> add_integer(2, 3, 4)
    Traceback (most recent call last):
    ...
    TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given
