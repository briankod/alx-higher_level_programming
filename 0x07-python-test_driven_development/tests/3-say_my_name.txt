The 3-say_my_name module
======================

Using say_my_name
-------------------

Import say_my_name from the 3-say_my_name module:
    >>> say_my_name = __import__('3-say_my_name').say_my_name

Tests for module docstring:
    >>> m_docstr = __import__("3-say_my_name").__doc__
    >>> len(m_docstr) > 1
    True

Tests for function docstring:
    >>> f_docstr = __import__("3-say_my_name").say_my_name.__doc__
    >>> len(f_docstr) > 1
    True

Tests when both 2 arguments are given and are strings:
    >>> say_my_name("Hiro", "Nakamura")
    My name is Hiro Nakamura

Tests when only one argument is given and is string:
    >>> say_my_name("Hiro")
    My name is Hiro 

Tests when 3 arguments are given and are strings:
    >>> say_my_name("Hiro", "Nakamura", "MTS")
    Traceback (most recent call last):
    ...
    TypeError: say_my_name() takes from 1 to 2 positional arguments but 3 were given

Tests when both 2 arguments are given, but one(first_name) is not string:
    >>> say_my_name(1, "Nakamura")
    Traceback (most recent call last):
    ...
    TypeError: first_name must be a string

Tests when both 2 arguments are given, but one(last_name) is not string:
    >>> say_my_name("Hiro", 2)
    Traceback (most recent call last):
    ...
    TypeError: last_name must be a string

Tests when no argument is given:
    >>> say_my_name()
    Traceback (most recent call last):
    ...
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'
